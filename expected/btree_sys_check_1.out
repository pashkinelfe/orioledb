CREATE SCHEMA btree_sys_check;
SET SESSION search_path = 'btree_sys_check';
CREATE EXTENSION orioledb;
CREATE TABLE o_test(
	id integer NOT NULL,
	val text NOT NULL,
	PRIMARY KEY(id),
	UNIQUE(id, val)
) USING orioledb;
CREATE TABLE o_test_child(
	id integer NOT NULL,
	o_test_ID integer NOT NULL REFERENCES o_test (id),
	PRIMARY KEY(id)
) USING orioledb;
INSERT INTO o_test(id, val) VALUES (1, 'hello');
INSERT INTO o_test(id, val) VALUES (2, 'hey');
INSERT INTO o_test_child(id, o_test_ID) VALUES (1, 1);
INSERT INTO o_test_child(id, o_test_ID) VALUES (2, 2);
UPDATE o_test SET val = 'new_dog' where id = 7;
UPDATE o_test SET id = 10 where id = 3;
DELETE FROM o_test_child where o_test_ID = 1;
DELETE FROM o_test where id = 1;
SELECT regexp_replace(c.relname, '\d+', 'NNN') relname, d.refcnt
FROM orioledb_table_descr d JOIN
     pg_class c ON c.oid = d.reloid
ORDER BY c.relname;
   relname    | refcnt 
--------------+--------
 o_test       |      1
 o_test_child |      1
(2 rows)

SELECT regexp_replace(c.relname, '\d+', 'NNN') relname, d.refcnt
FROM orioledb_index_descr d JOIN
     pg_class c ON c.oid = d.reloid
ORDER BY c.relname;
      relname      | refcnt 
-------------------+--------
 o_test_child_pkey |      1
 o_test_id_val_key |      1
 o_test_pkey       |      1
 pg_toast_NNN      |      1
 pg_toast_NNN      |      1
(5 rows)

DROP TABLE IF EXISTS o_test_child;
DROP TABLE IF EXISTS o_test;
CREATE TYPE o_enum AS ENUM ('a', 'b', 'c');
ALTER TYPE o_enum ADD VALUE 'd';
ALTER TYPE o_enum RENAME VALUE 'd' TO 'e';
CREATE TYPE custom_range as range (subtype=int8);
CREATE TYPE custom_type AS (x timestamp, y float);
CREATE TABLE o_test_sys_caches (
	key o_enum,
	key2 custom_range,
	key3 custom_type,
	key4 int[],
	PRIMARY KEY(key, key2, key3, key4)
) USING orioledb;
DROP TYPE custom_range CASCADE;
NOTICE:  drop cascades to column key2 of table o_test_sys_caches
DROP TABLE o_test_sys_caches;
DROP TYPE o_enum;
DROP TYPE custom_type;
CHECKPOINT;
-- SYS_TREES_SHARED_ROOT_INFO
SELECT regexp_replace(
		orioledb_sys_tree_structure(1, 'ne'),
		'\(\d+, \d+\), \d+, \d+\)',
		'(NNN, NNN), NNN, NNN)',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 240              +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: deleted, offset = 272, tuple = ((NNN, NNN), NNN, NNN)  +
     Item 1: deleted, offset = 312, tuple = ((NNN, NNN), NNN, NNN)  +
     Item 2: deleted, offset = 352, tuple = ((NNN, NNN), NNN, NNN)  +
     Item 3: deleted, offset = 392, tuple = ((NNN, NNN), NNN, NNN)  +
     Item 4: deleted, offset = 432, tuple = ((NNN, NNN), NNN, NNN)  +
     Item 5: deleted, offset = 472, tuple = ((NNN, NNN), NNN, NNN)  +
                                                                    +
 
(1 row)

-- SYS_TREES_O_TABLES
SELECT regexp_replace(
		orioledb_sys_tree_structure(2, 'ne'),
		'\(\d+, \d+, \d+\)',
		'(NNN, NNN, NNN)',
		'g');
                                        regexp_replace                                         
-----------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 24, nVacatedBytes = 5672                                      +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                          +
     Leftmost, Rightmost                                                                      +
   Chunk 0: offset = 0, location = 256, hikey location = 80, hikey = ((NNN, NNN, NNN), 0, 1)  +
     Item 0: deleted, offset = 264, tuple = (((NNN, NNN, NNN), 0, 1), 250)                    +
   Chunk 1: offset = 1, location = 560, hikey location = 104, hikey = ((NNN, NNN, NNN), 0, 0) +
     Item 1: deleted, offset = 568, tuple = (((NNN, NNN, NNN), 0, 1), 1766)                   +
   Chunk 2: offset = 2, location = 2376, hikey location = 128, hikey = ((NNN, NNN, NNN), 0, 1)+
     Item 2: deleted, offset = 2384, tuple = (((NNN, NNN, NNN), 0, 1), 250)                   +
     Item 3: deleted, offset = 2680, tuple = (((NNN, NNN, NNN), 0, 0), 1008)                  +
   Chunk 3: offset = 4, location = 3728, hikey location = 152, hikey = ((NNN, NNN, NNN), 0, 0)+
     Item 4: deleted, offset = 3736, tuple = (((NNN, NNN, NNN), 0, 1), 444)                   +
   Chunk 4: offset = 5, location = 4224, hikey location = 176                                 +
     Item 5: deleted, offset = 4232, tuple = (((NNN, NNN, NNN), 0, 0), 1202)                  +
     Item 6: deleted, offset = 5480, tuple = (((NNN, NNN, NNN), 0, 1), 444)                   +
                                                                                              +
 
(1 row)

-- SYS_TREES_O_INDICES
SELECT regexp_replace(
		orioledb_sys_tree_structure(3, 'ne'),
		'\(\d+, \d+, \d+\)',
		'(NNN, NNN, NNN)',
		'g');
                                        regexp_replace                                         
-----------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 24, nVacatedBytes = 4480                                      +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                          +
     Leftmost, Rightmost                                                                      +
   Chunk 0: offset = 0, location = 256, hikey location = 72, hikey = (1, (NNN, NNN, NNN), 0)  +
     Item 0: deleted, offset = 264, tuple = ((1, (NNN, NNN, NNN), 0), 626)                    +
   Chunk 1: offset = 1, location = 936, hikey location = 96, hikey = (2, (NNN, NNN, NNN), 0)  +
     Item 1: deleted, offset = 944, tuple = ((1, (NNN, NNN, NNN), 0), 962)                    +
     Item 2: deleted, offset = 1952, tuple = ((1, (NNN, NNN, NNN), 0), 626)                   +
   Chunk 2: offset = 3, location = 2624, hikey location = 120, hikey = (2, (NNN, NNN, NNN), 0)+
     Item 3: deleted, offset = 2632, tuple = ((2, (NNN, NNN, NNN), 0), 678)                   +
   Chunk 3: offset = 4, location = 3352, hikey location = 144                                 +
     Item 4: deleted, offset = 3360, tuple = ((2, (NNN, NNN, NNN), 0), 646)                   +
     Item 5: deleted, offset = 4048, tuple = ((2, (NNN, NNN, NNN), 0), 678)                   +
                                                                                              +
 
(1 row)

-- SYS_TREES_OPCLASS_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(4, 'ne'),
		'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
		'NNN, (NNN), X/X, ',
		'g');
                                                    regexp_replace                                                     
-----------------------------------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 0                                                                 +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                                                  +
     Leftmost, Rightmost                                                                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                           +
     Item 0: offset = 280, tuple = ((NNN, (NNN), X/X, N), opfamily: 1976, inputtype: 23, cmpOid: 351, ssupOid: 3130)  +
     Item 1: offset = 344, tuple = ((NNN, (NNN), X/X, N), opfamily: 1976, inputtype: 21, cmpOid: 350, ssupOid: 3129)  +
     Item 2: offset = 408, tuple = ((NNN, (NNN), X/X, N), opfamily: 1970, inputtype: 701, cmpOid: 355, ssupOid: 3133) +
     Item 3: offset = 472, tuple = ((NNN, (NNN), X/X, N), opfamily: 1994, inputtype: 25, cmpOid: 360, ssupOid: 3255)  +
     Item 4: offset = 536, tuple = ((NNN, (NNN), X/X, N), opfamily: 434, inputtype: 1114, cmpOid: 2045, ssupOid: 3137)+
     Item 5: offset = 600, tuple = ((NNN, (NNN), X/X, N), opfamily: 397, inputtype: 2277, cmpOid: 382, ssupOid: 0)    +
     Item 6: offset = 664, tuple = ((NNN, (NNN), X/X, N), opfamily: 2994, inputtype: 2249, cmpOid: 2987, ssupOid: 0)  +
     Item 7: offset = 728, tuple = ((NNN, (NNN), X/X, N), opfamily: 2789, inputtype: 27, cmpOid: 2794, ssupOid: 0)    +
     Item 8: offset = 792, tuple = ((NNN, (NNN), X/X, N), opfamily: 3522, inputtype: 3500, cmpOid: 3514, ssupOid: 0)  +
     Item 9: offset = 856, tuple = ((NNN, (NNN), X/X, N), opfamily: 3901, inputtype: 3831, cmpOid: 3870, ssupOid: 0)  +
                                                                                                                      +
 
(1 row)

-- SYS_TREES_ENUM_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(5, 'ne'),
		'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
		'NNN, (NNN), X/X, ',
		'g');
                               regexp_replace                               
----------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 40, nVacatedBytes = 152                    +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty       +
     Leftmost, Rightmost                                                   +
   Chunk 0: offset = 0, location = 256, hikey location = 64                +
     Item 0: deleted, offset = 264, tuple = (((NNN, (NNN), X/X, Y), 0), 92)+
                                                                           +
 
(1 row)

-- SYS_TREES_ENUMOID_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(6, 'ne'),
		'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ([YN])\), \d+',
		'NNN, (NNN), X/X, \1), NNN',
		'g');
                             regexp_replace                             
------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 224                +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty   +
     Leftmost, Rightmost                                               +
   Chunk 0: offset = 0, location = 256, hikey location = 64            +
     Item 0: deleted, offset = 264, tuple = ((NNN, (NNN), X/X, Y), NNN)+
     Item 1: deleted, offset = 320, tuple = ((NNN, (NNN), X/X, Y), NNN)+
     Item 2: deleted, offset = 376, tuple = ((NNN, (NNN), X/X, Y), NNN)+
     Item 3: deleted, offset = 432, tuple = ((NNN, (NNN), X/X, Y), NNN)+
                                                                       +
 
(1 row)

-- SYS_TREES_RANGE_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(7, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                                                     regexp_replace                                                      
-------------------------------------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 64                                                                  +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                                    +
     Leftmost, Rightmost                                                                                                +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                             +
     Item 0: deleted, offset = 264, tuple = ((NNN, (NNN), X/X, Y), elem_type: NNN, rng_collation: NNN, rng_cmp_oid: NNN)+
                                                                                                                        +
 
(1 row)

-- SYS_TREES_CLASS_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(8, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                                regexp_replace                                
------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 40, nVacatedBytes = 328                      +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty         +
     Leftmost, Rightmost                                                     +
   Chunk 0: offset = 0, location = 256, hikey location = 64                  +
     Item 0: offset = 264, tuple = (((NNN, (NNN), X/X, N), 0), 1384)         +
     Item 1: offset = 1712, tuple = (((NNN, (NNN), X/X, N), 0), 1272)        +
     Item 2: deleted, offset = 3048, tuple = (((NNN, (NNN), X/X, Y), 0), 264)+
                                                                             +
 
(1 row)

-- SYS_TREES_EXTENTS_OFF_LEN
SELECT orioledb_sys_tree_structure(9, 'ne');
                     orioledb_sys_tree_structure                     
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_EXTENTS_LEN_OFF
SELECT orioledb_sys_tree_structure(10, 'ne');
                     orioledb_sys_tree_structure                     
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_PROC_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(11, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                            regexp_replace                            
----------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 40, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean +
     Leftmost, Rightmost                                             +
   Chunk 0: offset = 0, location = 256, hikey location = 64          +
     Item 0: offset = 288, tuple = (((NNN, (NNN), X/X, N), 0), 108)  +
     Item 1: offset = 456, tuple = (((NNN, (NNN), X/X, N), 0), 108)  +
     Item 2: offset = 624, tuple = (((NNN, (NNN), X/X, N), 0), 112)  +
     Item 3: offset = 800, tuple = (((NNN, (NNN), X/X, N), 0), 108)  +
     Item 4: offset = 968, tuple = (((NNN, (NNN), X/X, N), 0), 110)  +
     Item 5: offset = 1144, tuple = (((NNN, (NNN), X/X, N), 0), 108) +
     Item 6: offset = 1312, tuple = (((NNN, (NNN), X/X, N), 0), 116) +
     Item 7: offset = 1488, tuple = (((NNN, (NNN), X/X, N), 0), 106) +
     Item 8: offset = 1656, tuple = (((NNN, (NNN), X/X, N), 0), 112) +
     Item 9: offset = 1832, tuple = (((NNN, (NNN), X/X, N), 0), 120) +
     Item 10: offset = 2016, tuple = (((NNN, (NNN), X/X, N), 0), 120)+
     Item 11: offset = 2200, tuple = (((NNN, (NNN), X/X, N), 0), 124)+
     Item 12: offset = 2384, tuple = (((NNN, (NNN), X/X, N), 0), 128)+
     Item 13: offset = 2576, tuple = (((NNN, (NNN), X/X, N), 0), 120)+
     Item 14: offset = 2760, tuple = (((NNN, (NNN), X/X, N), 0), 106)+
     Item 15: offset = 2928, tuple = (((NNN, (NNN), X/X, N), 0), 108)+
                                                                     +
 
(1 row)

-- SYS_TREES_TYPE_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(12, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                                                                                                                                                                              regexp_replace                                                                                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 160                                                                                                                                                                                                                                                                                                                   +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                                                                                                                                                                                                                                                                                      +
     Leftmost, Rightmost                                                                                                                                                                                                                                                                                                                                                  +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                                                                                                                                                                                                                                                                               +
     Item 0: offset = 288, tuple = ((NNN, (NNN), X/X, N), typname: int8, typlen: NNN, typbyval: Y, typalign: 'd', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'N', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)                 +
     Item 1: offset = 448, tuple = ((NNN, (NNN), X/X, N), typname: int2, typlen: NNN, typbyval: Y, typalign: 's', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'N', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)                 +
     Item 2: offset = 608, tuple = ((NNN, (NNN), X/X, N), typname: int4, typlen: NNN, typbyval: Y, typalign: 'i', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'N', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)                 +
     Item 3: offset = 768, tuple = ((NNN, (NNN), X/X, N), typname: text, typlen: -1, typbyval: N, typalign: 'i', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'S', typispreferred: Y, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)                  +
     Item 4: offset = 928, tuple = ((NNN, (NNN), X/X, N), typname: tid, typlen: NNN, typbyval: N, typalign: 's', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'U', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)                  +
     Item 5: offset = 1088, tuple = ((NNN, (NNN), X/X, N), typname: float8, typlen: NNN, typbyval: Y, typalign: 'd', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'N', typispreferred: Y, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)              +
     Item 6: offset = 1248, tuple = ((NNN, (NNN), X/X, N), typname: timestamp, typlen: NNN, typbyval: Y, typalign: 'd', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'b', typcategory: 'D', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)           +
     Item 7: offset = 1408, tuple = ((NNN, (NNN), X/X, N), typname: record, typlen: -1, typbyval: N, typalign: 'd', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)               +
     Item 8: offset = 1568, tuple = ((NNN, (NNN), X/X, N), typname: anyarray, typlen: -1, typbyval: N, typalign: 'd', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)             +
     Item 9: offset = 1728, tuple = ((NNN, (NNN), X/X, N), typname: internal, typlen: NNN, typbyval: Y, typalign: 'd', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)            +
     Item 10: offset = 1888, tuple = ((NNN, (NNN), X/X, N), typname: anyenum, typlen: NNN, typbyval: Y, typalign: 'i', typstorage: 'p', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)            +
     Item 11: offset = 2048, tuple = ((NNN, (NNN), X/X, N), typname: anyrange, typlen: -1, typbyval: N, typalign: 'd', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'p', typcategory: 'P', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)            +
     Item 12: deleted, offset = 2208, tuple = ((NNN, (NNN), X/X, Y), typname: custom_type, typlen: -1, typbyval: N, typalign: 'd', typstorage: 'x', typcollation: NNN, typrelid: NNN, typtype: 'c', typcategory: 'C', typispreferred: N, typisdefined: Y, typinput: NNN, typoutput: NNN, typreceive: NNN, typsend: NNN, typelem: NNN, typdelim: ',', default_opclass: NNN)+
                                                                                                                                                                                                                                                                                                                                                                          +
 
(1 row)

-- SYS_TREES_AGG_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(13, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_OPER_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(14, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_AMOP_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(15, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_AMPROC_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(16, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_COLLATION_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(17, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 40, nVacatedBytes = 0               +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 264, tuple = (((NNN, (NNN), X/X, N), 0), 136) +
                                                                    +
 
(1 row)

-- SYS_TREES_DATABASE_CACHE
SELECT regexp_replace(regexp_replace(
			orioledb_sys_tree_structure(18, 'ne'),
			'\d+, \(\d+\), [A-F0-9]+/[A-F0-9]+, ',
			'NNN, (NNN), X/X, ',
			'g'),
		': \d+',
		': NNN',
		'g');
                             regexp_replace                              
-------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 0                   +
 state = free, datoid equal, relnode equal, ix_type = primary, clean    +
     Leftmost, Rightmost                                                +
   Chunk 0: offset = 0, location = 256, hikey location = 64             +
     Item 0: offset = 264, tuple = ((NNN, (NNN), X/X, N), encoding: NNN)+
                                                                        +
 
(1 row)

-- fail
SELECT orioledb_sys_tree_structure(9999);
ERROR:  Value num must be in the range from 1 to 18
SELECT orioledb_sys_tree_check(-1111);
ERROR:  Value num must be in the range from 1 to 18
DROP EXTENSION orioledb CASCADE;
DROP SCHEMA btree_sys_check CASCADE;
RESET search_path;
