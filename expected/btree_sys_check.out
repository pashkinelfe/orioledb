CREATE EXTENSION orioledb;
CREATE TABLE o_test(
	id integer NOT NULL,
	val text NOT NULL,
	PRIMARY KEY(id),
	UNIQUE(id, val)
) USING orioledb;
CREATE TABLE o_test_child(
	id integer NOT NULL,
	o_test_ID integer NOT NULL REFERENCES o_test (id),
	PRIMARY KEY(id)
) USING orioledb;
INSERT INTO o_test(id, val) VALUES (1, 'hello');
INSERT INTO o_test(id, val) VALUES (2, 'hey');
INSERT INTO o_test_child(id, o_test_ID) VALUES (1, 1);
INSERT INTO o_test_child(id, o_test_ID) VALUES (2, 2);
UPDATE o_test SET val = 'new_dog' where id = 7;
UPDATE o_test SET id = 10 where id = 3;
DELETE FROM o_test_child where o_test_ID = 1;
DELETE FROM o_test where id = 1;
SELECT regexp_replace(c.relname, '\d+', 'NNN') relname, d.refcnt
FROM orioledb_table_descr d JOIN
     pg_class c ON c.oid = d.reloid
ORDER BY c.relname;
   relname    | refcnt 
--------------+--------
 o_test       |      1
 o_test_child |      1
(2 rows)

SELECT regexp_replace(c.relname, '\d+', 'NNN') relname, d.refcnt
FROM orioledb_index_descr d JOIN
     pg_class c ON c.oid = d.reloid
ORDER BY c.relname;
      relname      | refcnt 
-------------------+--------
 o_test_child_pkey |      1
 o_test_id_val_key |      1
 o_test_pkey       |      1
 pg_toast_NNN      |      1
 pg_toast_NNN      |      1
(5 rows)

DROP TABLE IF EXISTS o_test_child;
DROP TABLE IF EXISTS o_test;
CREATE TYPE o_enum AS ENUM ('a', 'b', 'c');
ALTER TYPE o_enum ADD VALUE 'd';
ALTER TYPE o_enum RENAME VALUE 'd' TO 'e';
CREATE TYPE custom_range as range (subtype=int8);
CREATE TYPE custom_type AS (x timestamp, y float);
CREATE TABLE o_test_sys_caches (
	key o_enum,
	key2 custom_range,
	key3 custom_type,
	key4 int[],
	PRIMARY KEY(key, key2, key3, key4)
) USING orioledb;
DROP TYPE custom_range CASCADE;
NOTICE:  drop cascades to column key2 of table o_test_sys_caches
DROP TABLE o_test_sys_caches;
DROP TYPE o_enum;
DROP TYPE custom_type;
CHECKPOINT;
-- SYS_TREES_SHARED_ROOT_INFO
SELECT regexp_replace(
		orioledb_sys_tree_structure(1, 'ne'),
		'\(\d+, \d+\), \d+, \d+\)',
		'(NNN, NNN), NNN, NNN)',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 160              +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: deleted, offset = 264, tuple = ((NNN, NNN), NNN, NNN)  +
     Item 1: deleted, offset = 304, tuple = ((NNN, NNN), NNN, NNN)  +
     Item 2: deleted, offset = 344, tuple = ((NNN, NNN), NNN, NNN)  +
     Item 3: deleted, offset = 384, tuple = ((NNN, NNN), NNN, NNN)  +
                                                                    +
 
(1 row)

-- SYS_TREES_O_TABLES
SELECT regexp_replace(
		orioledb_sys_tree_structure(2, 'ne'),
		'\(\d+, \d+, \d+\)',
		'(NNN, NNN, NNN)',
		'g');
                                        regexp_replace                                         
-----------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 24, nVacatedBytes = 5576                                      +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                          +
     Leftmost, Rightmost                                                                      +
   Chunk 0: offset = 0, location = 256, hikey location = 80, hikey = ((NNN, NNN, NNN), 0, 1)  +
     Item 0: deleted, offset = 264, tuple = (((NNN, NNN, NNN), 0, 0), 240)                    +
   Chunk 1: offset = 1, location = 544, hikey location = 104, hikey = ((NNN, NNN, NNN), 0, 0) +
     Item 1: deleted, offset = 552, tuple = (((NNN, NNN, NNN), 0, 1), 1764)                   +
   Chunk 2: offset = 2, location = 2360, hikey location = 128, hikey = ((NNN, NNN, NNN), 0, 0)+
     Item 2: deleted, offset = 2368, tuple = (((NNN, NNN, NNN), 0, 0), 240)                   +
     Item 3: deleted, offset = 2648, tuple = (((NNN, NNN, NNN), 0, 0), 1002)                  +
   Chunk 3: offset = 4, location = 3696, hikey location = 152, hikey = ((NNN, NNN, NNN), 0, 0)+
     Item 4: deleted, offset = 3704, tuple = (((NNN, NNN, NNN), 0, 0), 424)                   +
   Chunk 4: offset = 5, location = 4168, hikey location = 176                                 +
     Item 5: deleted, offset = 4176, tuple = (((NNN, NNN, NNN), 0, 0), 1186)                  +
     Item 6: deleted, offset = 5408, tuple = (((NNN, NNN, NNN), 0, 1), 424)                   +
                                                                                              +
 
(1 row)

-- SYS_TREES_O_INDICES
SELECT regexp_replace(
		orioledb_sys_tree_structure(3, 'ne'),
		'\(\d+, \d+, \d+\)',
		'(NNN, NNN, NNN)',
		'g');
                                        regexp_replace                                         
-----------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 24, nVacatedBytes = 5816                                      +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                          +
     Leftmost, Rightmost                                                                      +
   Chunk 0: offset = 0, location = 256, hikey location = 80, hikey = (1, (NNN, NNN, NNN), 0)  +
     Item 0: deleted, offset = 264, tuple = ((1, (NNN, NNN, NNN), 0), 630)                    +
   Chunk 1: offset = 1, location = 936, hikey location = 104, hikey = (1, (NNN, NNN, NNN), 0) +
     Item 1: deleted, offset = 944, tuple = ((1, (NNN, NNN, NNN), 0), 630)                    +
   Chunk 2: offset = 2, location = 1616, hikey location = 128, hikey = (2, (NNN, NNN, NNN), 0)+
     Item 2: deleted, offset = 1624, tuple = ((1, (NNN, NNN, NNN), 0), 966)                   +
     Item 3: deleted, offset = 2632, tuple = ((1, (NNN, NNN, NNN), 0), 630)                   +
   Chunk 3: offset = 4, location = 3304, hikey location = 152, hikey = (2, (NNN, NNN, NNN), 0)+
     Item 4: deleted, offset = 3312, tuple = ((2, (NNN, NNN, NNN), 0), 406)                   +
     Item 5: deleted, offset = 3760, tuple = ((2, (NNN, NNN, NNN), 0), 406)                   +
   Chunk 4: offset = 6, location = 4208, hikey location = 176                                 +
     Item 6: deleted, offset = 4216, tuple = ((2, (NNN, NNN, NNN), 0), 650)                   +
     Item 7: deleted, offset = 4912, tuple = ((2, (NNN, NNN, NNN), 0), 682)                   +
     Item 8: deleted, offset = 5640, tuple = ((3, (NNN, NNN, NNN), 0), 426)                   +
                                                                                              +
 
(1 row)

-- SYS_TREES_OPCLASSES
SELECT regexp_replace(
		orioledb_sys_tree_structure(4, 'ne'),
		'\(\d+, \d+\)',
		'(NNN, NNN)',
		'g');
                                              regexp_replace                                               
-----------------------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 8, nVacatedBytes = 0                                                      +
 state = free, datoid equal, relnode equal, ix_type = primary, clean                                      +
     Leftmost, Rightmost                                                                                  +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                               +
     Item 0: offset = 272, tuple = ((NNN, NNN), opfamily: 1976, inputtype: 23, cmpOid: 351, ssupOid: 3130)+
     Item 1: offset = 312, tuple = ((NNN, NNN), opfamily: 1976, inputtype: 21, cmpOid: 350, ssupOid: 3129)+
     Item 2: offset = 352, tuple = ((NNN, NNN), opfamily: 1994, inputtype: 25, cmpOid: 360, ssupOid: 3255)+
     Item 3: offset = 392, tuple = ((NNN, NNN), opfamily: 2789, inputtype: 27, cmpOid: 2794, ssupOid: 0)  +
     Item 4: offset = 432, tuple = ((NNN, NNN), opfamily: 397, inputtype: 2277, cmpOid: 382, ssupOid: 0)  +
     Item 5: offset = 472, tuple = ((NNN, NNN), opfamily: 2994, inputtype: 2249, cmpOid: 2987, ssupOid: 0)+
     Item 6: offset = 512, tuple = ((NNN, NNN), opfamily: 3522, inputtype: 3500, cmpOid: 3514, ssupOid: 0)+
     Item 7: offset = 552, tuple = ((NNN, NNN), opfamily: 3901, inputtype: 3831, cmpOid: 3870, ssupOid: 0)+
                                                                                                          +
 
(1 row)

-- SYS_TREES_ENUM_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(5, 'ne'),
		'\d+, \d+, [A-F0-9]+/[A-F0-9]+, ',
		'NNN, NNN, X/X, ',
		'g');
                              regexp_replace                              
--------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 136                  +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty     +
     Leftmost, Rightmost                                                 +
   Chunk 0: offset = 0, location = 256, hikey location = 64              +
     Item 0: deleted, offset = 264, tuple = (((NNN, NNN, X/X, Y), 0), 84)+
                                                                         +
 
(1 row)

-- SYS_TREES_ENUMOID_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(6, 'ne'),
		'\d+, \d+, [A-F0-9]+/[A-F0-9]+, ([YN])\), \d+',
		'NNN, NNN, X/X, \1), NNN',
		'g');
                            regexp_replace                            
----------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 24, nVacatedBytes = 192              +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty +
     Leftmost, Rightmost                                             +
   Chunk 0: offset = 0, location = 256, hikey location = 64          +
     Item 0: deleted, offset = 264, tuple = ((NNN, NNN, X/X, Y), NNN)+
     Item 1: deleted, offset = 312, tuple = ((NNN, NNN, X/X, Y), NNN)+
     Item 2: deleted, offset = 360, tuple = ((NNN, NNN, X/X, Y), NNN)+
     Item 3: deleted, offset = 408, tuple = ((NNN, NNN, X/X, Y), NNN)+
                                                                     +
 
(1 row)

-- SYS_TREES_RANGE_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(7, 'ne'),
		'\d+, \d+, [A-F0-9]+/[A-F0-9]+, ',
		'NNN, NNN, X/X, ',
		'g');
                                                                      regexp_replace                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 24, nVacatedBytes = 56                                                                                                    +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty                                                                                      +
     Leftmost, Rightmost                                                                                                                                  +
   Chunk 0: offset = 0, location = 256, hikey location = 64                                                                                               +
     Item 0: deleted, offset = 264, tuple = ((NNN, NNN, X/X, Y), elem_typlen: 8, elem_typbyval: Y, elem_typalign: 100, rng_collation: 0, rng_cmp_oid: 842)+
                                                                                                                                                          +
 
(1 row)

-- SYS_TREES_CLASS_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(8, 'ne'),
		'\d+, \d+, [A-F0-9]+/[A-F0-9]+, ',
		'NNN, NNN, X/X, ',
		'g');
                              regexp_replace                               
---------------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 312                   +
 state = free, datoid equal, relnode equal, ix_type = primary, dirty      +
     Leftmost, Rightmost                                                  +
   Chunk 0: offset = 0, location = 256, hikey location = 64               +
     Item 0: deleted, offset = 264, tuple = (((NNN, NNN, X/X, Y), 0), 256)+
                                                                          +
 
(1 row)

-- SYS_TREES_TYPE_ELEMENT_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(9, 'ne'),
		'\d+, \d+, [A-F0-9]+/[A-F0-9]+, ',
		'NNN, NNN, X/X, ',
		'g');
                            regexp_replace                             
-----------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 24, nVacatedBytes = 0                 +
 state = free, datoid equal, relnode equal, ix_type = primary, clean  +
     Leftmost, Rightmost                                              +
   Chunk 0: offset = 0, location = 256, hikey location = 64           +
     Item 0: offset = 264, tuple = ((NNN, NNN, X/X, N), cmp_oid: 351) +
     Item 1: offset = 312, tuple = ((NNN, NNN, X/X, N), cmp_oid: 355) +
     Item 2: offset = 360, tuple = ((NNN, NNN, X/X, N), cmp_oid: 2045)+
                                                                      +
 
(1 row)

-- SYS_TREES_EXTENTS_OFF_LEN
SELECT orioledb_sys_tree_structure(10, 'ne');
                     orioledb_sys_tree_structure                     
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_EXTENTS_LEN_OFF
SELECT orioledb_sys_tree_structure(11, 'ne');
                     orioledb_sys_tree_structure                     
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 0, nVacatedBytes = 0                +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
                                                                    +
 
(1 row)

-- SYS_TREES_PROC_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(12, 'ne'),
		'\d+, \d+, [A-F0-9]+/[A-F0-9]+, ',
		'NNN, NNN, X/X, ',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 0               +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 288, tuple = (((NNN, NNN, X/X, N), 0), 66)    +
     Item 1: offset = 408, tuple = (((NNN, NNN, X/X, N), 0), 66)    +
     Item 2: offset = 528, tuple = (((NNN, NNN, X/X, N), 0), 68)    +
     Item 3: offset = 648, tuple = (((NNN, NNN, X/X, N), 0), 66)    +
     Item 4: offset = 768, tuple = (((NNN, NNN, X/X, N), 0), 67)    +
     Item 5: offset = 888, tuple = (((NNN, NNN, X/X, N), 0), 66)    +
     Item 6: offset = 1008, tuple = (((NNN, NNN, X/X, N), 0), 70)   +
     Item 7: offset = 1136, tuple = (((NNN, NNN, X/X, N), 0), 65)   +
     Item 8: offset = 1256, tuple = (((NNN, NNN, X/X, N), 0), 68)   +
     Item 9: offset = 1376, tuple = (((NNN, NNN, X/X, N), 0), 74)   +
     Item 10: offset = 1504, tuple = (((NNN, NNN, X/X, N), 0), 74)  +
     Item 11: offset = 1632, tuple = (((NNN, NNN, X/X, N), 0), 74)  +
     Item 12: offset = 1760, tuple = (((NNN, NNN, X/X, N), 0), 65)  +
     Item 13: offset = 1880, tuple = (((NNN, NNN, X/X, N), 0), 66)  +
                                                                    +
 
(1 row)

-- SYS_TREES_TYPE_CACHE
SELECT regexp_replace(
		orioledb_sys_tree_structure(13, 'ne'),
		'\d+, \d+, [A-F0-9]+/[A-F0-9]+, ',
		'NNN, NNN, X/X, ',
		'g');
                           regexp_replace                            
---------------------------------------------------------------------
 Page 0: level = 0, maxKeyLen = 32, nVacatedBytes = 0               +
 state = free, datoid equal, relnode equal, ix_type = primary, clean+
     Leftmost, Rightmost                                            +
   Chunk 0: offset = 0, location = 256, hikey location = 64         +
     Item 0: offset = 264, tuple = (((NNN, NNN, X/X, N), 0), 112)   +
     Item 1: offset = 432, tuple = (((NNN, NNN, X/X, N), 0), 112)   +
     Item 2: offset = 600, tuple = (((NNN, NNN, X/X, N), 0), 112)   +
     Item 3: offset = 768, tuple = (((NNN, NNN, X/X, N), 0), 112)   +
                                                                    +
 
(1 row)

-- fail
SELECT orioledb_sys_tree_structure(9999);
ERROR:  Value num must be in the range from 1 to 13
SELECT orioledb_sys_tree_check(-1111);
ERROR:  Value num must be in the range from 1 to 13
DROP EXTENSION orioledb CASCADE;
